{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vitor\\\\cloneGit\\\\Bonviniv.github.io\\\\stackhunt\\\\src\\\\components\\\\LoadingSpinner.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadingSpinner() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ml-3 text-gray-600\",\n      children: \"Searching for jobs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n}\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["LoadingSpinner","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vitor/cloneGit/Bonviniv.github.io/stackhunt/src/components/LoadingSpinner.jsx"],"sourcesContent":["function LoadingSpinner() {\r\n  return (\r\n    <div className=\"flex justify-center items-center py-8\">\r\n      <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\r\n      <span className=\"ml-3 text-gray-600\">Searching for jobs...</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n\r\n"],"mappings":";;AAAA,SAASA,cAAcA,CAAA,EAAG;EACxB,oBACEC,OAAA;IAAKC,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBACpDF,OAAA;MAAKC,SAAS,EAAC;IAAgE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtFN,OAAA;MAAMC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAACC,EAAA,GAPQR,cAAc;AASvB,eAAeA,cAAc;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}